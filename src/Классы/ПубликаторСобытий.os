#Использовать logos

Перем Лог;
Перем Табакерка;

// Публикует событие для всех подписчиков, зарегистрированных на это событие.
//
// Параметры:
//   Источник - Произвольный - Объект, инициировавший событие.
//   ИмяСобытия - Строка - Имя события, на которое подписчики подписаны.
//   ПараметрыСобытия - Массив  - Массив параметров события. 
//                                Каждый элемент массива передается как отдельный аргумент в метод подписчика.
//
// Пример:
//   ПараметрыСобытия = Новый Массив;
//   ПараметрыСобытия.Добавить("Данные1");
//   ПараметрыСобытия.Добавить("Данные2");
//
//   ПубликаторСобытий.ОпубликоватьСобытие(ЭтотОбъект, "TestEvent", ПараметрыСобытия);
//
Процедура ОпубликоватьСобытие(Источник, ИмяСобытия, ПараметрыСобытия) Экспорт

	Лог.Отладка("Получено событие ""%1"". Источник ""%2""", ИмяСобытия, Источник);

	ПередаваемыеПараметрыСобытия = Новый Массив;
	ПередаваемыеПараметрыСобытия.Добавить(Источник);
	
	Для Каждого ПараметрСобытия Из ПараметрыСобытия Цикл
		ПередаваемыеПараметрыСобытия.Добавить(ПараметрСобытия);
	КонецЦикла;
	
	КонечныйПубликаторСобытий = Табакерка.Достать();
	Попытка
		КонечныйПубликаторСобытий.ВызватьСобытие(ИмяСобытия, ПередаваемыеПараметрыСобытия);
	Исключение
		Сообщить(ИнформацияОбОшибке().ПодробноеОписаниеОшибки());
		ВызватьИсключение;
	КонецПопытки;
КонецПроцедуры

&Желудь
Процедура ПриСозданииОбъекта(&Табакерка &Пластилин ПубликаторСобытий)
	Табакерка = ПубликаторСобытий;
	Лог = Логирование.ПолучитьЛог("oscript.lib.autumn.event-publisher.ПубликаторСобытий");
КонецПроцедуры
